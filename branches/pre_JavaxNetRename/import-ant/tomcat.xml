<!--
    ImportAnt
    Copyright (C) 2004-2008  Miguel Filipe Leitao Pardal

    This library is free software; you can redistribute it and/or
    modify it under the terms of the GNU Lesser General Public
    License as published by the Free Software Foundation; either
    version 2.1 of the License, or any later version.

    This library is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
    Lesser General Public License for more details.

    You should have received a copy of the GNU Lesser General Public
    License along with this library; if not, write to the Free Software
    Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA

    Contact the authors at: miguel.pardal@ist.utl.pt
-->
<project name="tomcat">

    <!--            -->
    <!-- PROPERTIES -->
    <!--            -->
    <property name="import-ant.module.tomcat" value="true" />

    <property name="tomcat.name" value="Tomcat" />
    <property name="tomcat.version" value="5" />

    <property name="tomcat.dir" location="${env.CATALINA_HOME}" />

    <!-- USER NOTE: 'tomcat.username' will have to be defined elsewhere -->
    <!-- USER NOTE: 'tomcat.password' will have to be defined elsewhere -->
    <property name="tomcat.host" value="localhost" />
    <property name="tomcat.port" value="8080" />
    <property name="tomcat.port.secure" value="8443" />
    <property name="tomcat.protocol" value="http" />
    <property name="tomcat.protocol.secure" value="https" />
    <property name="tomcat.server" value="${tomcat.host}:${tomcat.port}" />
    <property name="tomcat.server.secure" value="${tomcat.host}:${tomcat.port.secure}" />
    <property name="tomcat.url" value="${tomcat.protocol}://${tomcat.server}" />
    <property name="tomcat.url.secure" value="${tomcat.protocol.secure}://${tomcat.server.secure}" />
    <property name="tomcat.web-manager.context.path" value="manager" />
    <property name="tomcat.web-manager.url" value="${tomcat.url}/${tomcat.web-manager.context.path}" />

    <!--       -->
    <!-- PATHS -->
    <!--       -->
    <!-- development libraries -->
    <path id="tomcat.common.jars.path">
        <fileset dir="${tomcat.dir}/common/lib">
            <include name="**/*.jar"/>
        </fileset>
    </path>
    <path id="tomcat.server.jars.path">
        <fileset dir="${tomcat.dir}/server/lib">
            <include name="**/*.jar"/>
        </fileset>
    </path>

    <path id="tomcat.jars.path">
        <path refid="tomcat.server.jars.path" />
        <path refid="tomcat.common.jars.path" />
    </path>

    <!-- taskdefs library -->
    <path id="catalina-ant.jar.path">
        <pathelement location="${tomcat.dir}/server/lib/catalina-ant.jar"/>
    </path>


    <!--          -->
    <!-- TASKDEFS -->
    <!--          -->
    <taskdef name="deploy" classname="org.apache.catalina.ant.DeployTask" classpathref="catalina-ant.jar.path" />
    <taskdef name="undeploy" classname="org.apache.catalina.ant.UndeployTask" classpathref="catalina-ant.jar.path" />
    <taskdef name="list" classname="org.apache.catalina.ant.ListTask" classpathref="catalina-ant.jar.path" />
    <taskdef name="install" classname="org.apache.catalina.ant.InstallTask" classpathref="catalina-ant.jar.path"/>
    <taskdef name="reload" classname="org.apache.catalina.ant.ReloadTask" classpathref="catalina-ant.jar.path" />
    <taskdef name="remove" classname="org.apache.catalina.ant.RemoveTask"  classpathref="catalina-ant.jar.path"/>
    <taskdef name="start" classname="org.apache.catalina.ant.StartTask" classpathref="catalina-ant.jar.path" />
    <taskdef name="stop" classname="org.apache.catalina.ant.StopTask" classpathref="catalina-ant.jar.path" />

    <!--         -->
    <!-- TARGETS -->
    <!--         -->

    <!-- MAIN TARGETS (name, description) -->
    <target name="deploy"
            depends="-check-web-app-user,-check-web-app-context,build,-deploy"
            description="Deploy Web application">
    </target>

    <target name="undeploy"
            depends="-check-web-app-user,-check-web-app-context,-undeploy"
            description="Undeploy Web application">
    </target>

    <target name="redeploy"
            depends="-check-web-app-user,-check-web-app-context,-undeploy,build,-deploy"
            description="Undeploy and deploy Web aplication">
    </target>

    <target name="quick-deploy"
            depends="-check-web-app-user,-check-web-app-context,-quick-deploy-warning,-deploy"
            description="Deploy Web application without rebuilding WAR file">
    </target>

    <target name="quick-redeploy"
            depends="-check-web-app-user,-check-web-app-context,-undeploy,-quick-deploy-warning,-deploy"
            description="Undeploy and deploy Web aplication without rebuilding WAR file">
    </target>

    <!-- PUBLIC AUXILIARY TARGETS (name, no description) -->
    <target name="list-web-apps"
            depends="-check-web-app-user">
        <echo message="Listing web applications..."/>
        <list url="${tomcat.web-manager.url}"
              username="${tomcat.username}" password="${tomcat.password}" />
    </target>

    <target name="start-web-app"
            depends="-check-web-app-user,-check-web-app-context">
        <echo message="Starting application ${web-app-env.deploy.context}..."/>
        <start url="${tomcat.web-manager.url}"
               username="${tomcat.username}" password="${tomcat.password}"
               path="/${web-app-env.deploy.context}" />
    </target>

    <target name="stop-web-app"
            depends="-check-web-app-user,-check-web-app-context">
        <echo message="Stopping application ${web-app-env.deploy.context}..."/>
        <stop url="${tomcat.web-manager.url}"
              username="${tomcat.username}" password="${tomcat.password}"
              path="/${web-app-env.deploy.context}" />
    </target>

    <!-- PRIVATE AUXILIARY TARGETS (-name, no description) -->
    <target name="-check-web-app-user">
        <fail message="MUST DEFINE tomcat.username PROPERTY" unless="tomcat.username" />
        <fail message="MUST DEFINE tomcat.password PROPERTY" unless="tomcat.password" />
    </target>

    <target name="-check-web-app-context">
        <fail message="MUST DEFINE web-app-env.deploy.context PROPERTY" unless="web-app-env.deploy.context" />
    </target>

    <target name="-quick-deploy-warning">
        <echo level="warning" message="Deploying current WAR file. It may be out of date." />
        <!-- sleep is here to give time for slower machines to undeploy
             web application before new deploy" -->
        <sleep seconds="1" />
    </target>

    <target name="-deploy"
            depends="">
        <fail message="MUST DEFINE web-app-env.deploy.war.rel-file PROPERTY" unless="web-app-env.deploy.war.rel-file" />
        <property name="web-app-env.deploy.war.file" location="${web-app-env.deploy.war.rel-file}" />
        <deploy url="${tomcat.web-manager.url}"
                username="${tomcat.username}" password="${tomcat.password}"
                path="/${web-app-env.deploy.context}" war="file:${web-app-env.deploy.war.file}" />
    </target>

    <target name="-undeploy"
            depends="">
        <undeploy url="${tomcat.web-manager.url}"
                  username="${tomcat.username}" password="${tomcat.password}"
                  path="/${web-app-env.deploy.context}" />
    </target>

   <target name="-replace-tomcat-tokens(dir)">
        <fail message="MUST DEFINE dir PROPERTY" unless="dir" />
        <replace dir="${dir}" summary="${config-replaces-summary.option}">
            <replacefilter token="@tomcat.name@" value="${tomcat.name}" />
            <replacefilter token="@tomcat.version@" value="${tomcat.version}" />
            <replacefilter token="@tomcat.dir@" value="${tomcat.dir}" />
            <replacefilter token="@tomcat.username@" value="${tomcat.username}" />
            <replacefilter token="@tomcat.password@" value="${tomcat.password}" />
            <replacefilter token="@tomcat.host@" value="${tomcat.host}" />
            <replacefilter token="@tomcat.port@" value="${tomcat.port}" />
            <replacefilter token="@tomcat.url@" value="${tomcat.url}" />
            <replacefilter token="@tomcat.web-manager.url@" value="${tomcat.web-manager.url}" />
        </replace>
    </target>

    <!-- FUNCTION TARGETS (-name(args), no description) -->

    <!--         -->
    <!-- IMPORTS -->
    <!--         -->
    <import file="optional/tomcat_start-stop.xml" optional="true" />


<!--
    ENVIRONMENT IMPLEMENTATIONS ================================================
-->

<!--
    BEGIN ENVIRONMENT: web-app-env - web application environment - - - - - - - -

    1 - define web application environment property:
-->
    <property name="import-ant.module.web-app-env" value="true" />
<!--
    2 - define web application environment properties
-->
    <property name="web-app-env.name" value="${tomcat.name}" />
    <property name="web-app-env.version" value="${tomcat.version}" />
    <!-- USER NOTE: 'web-app-env.deploy.context' will have to be defined in project's build.xml -->
    <!-- USER NOTE: 'web-app-env.deploy.war.rel-file' will have to be defined in project's build.xml -->
<!--
 3 - define jar collection for web applications
-->
    <path id="web-app.jars.path">
        <path refid="tomcat.common.jars.path" />
    </path>
<!--
    END ENVIRONMENT: web-app-env - web application environment - - - - - - - - -
-->

</project>
